pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
# abline(a = (p1$y - ((p2$y - p1$y)/(p2$x - p1$x))*p1$x), b = ( (p2$y - p1$y)/(p2$x - p1$x) ), col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
plot(1, type = 'n', xlim = c(0,10), ylim = c(0,10))
p1 = list(x = sample(0:10,1),y = sample(0:10,1))
p2 = list(x = sample(0:10,1),y = sample(0:10,1))
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
# abline(a = (p1$y - ((p2$y - p1$y)/(p2$x - p1$x))*p1$x), b = ( (p2$y - p1$y)/(p2$x - p1$x) ), col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
plot(1, type = 'n', xlim = c(0,10), ylim = c(0,10))
p1 = list(x = sample(0:10,1),y = sample(0:10,1))
p2 = list(x = sample(0:10,1),y = sample(0:10,1))
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
# abline(a = (p1$y - ((p2$y - p1$y)/(p2$x - p1$x))*p1$x), b = ( (p2$y - p1$y)/(p2$x - p1$x) ), col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
plot(1, type = 'n', xlim = c(0,10), ylim = c(0,10))
p1 = list(x = sample(0:10,1),y = sample(0:10,1))
p2 = list(x = sample(0:10,1),y = sample(0:10,1))
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
# abline(a = (p1$y - ((p2$y - p1$y)/(p2$x - p1$x))*p1$x), b = ( (p2$y - p1$y)/(p2$x - p1$x) ), col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
plot(1, type = 'n', xlim = c(0,10), ylim = c(0,10))
p1 = list(x = sample(0:10,1),y = sample(0:10,1))
p2 = list(x = sample(0:10,1),y = sample(0:10,1))
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
# abline(a = (p1$y - ((p2$y - p1$y)/(p2$x - p1$x))*p1$x), b = ( (p2$y - p1$y)/(p2$x - p1$x) ), col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
plot(1, type = 'n', xlim = c(0,10), ylim = c(0,10))
p1 = list(x = sample(0:10,1),y = sample(0:10,1))
p2 = list(x = sample(0:10,1),y = sample(0:10,1))
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
# abline(a = (p1$y - ((p2$y - p1$y)/(p2$x - p1$x))*p1$x), b = ( (p2$y - p1$y)/(p2$x - p1$x) ), col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
df = read.csv('../datasets/g2-2-10.txt')
plot(df)
# gerando dados (pra simulações) com distro gaussiana normal
x = seq(-10:10, len=100)
x
# gerando dados (pra simulações) com distro gaussiana normal
x = seq(-10,10, len=100)
x
y =  dnorm(x, mean=-1.5, sd = 2.1)
plot(x,y)
plot(x,y, col='red', type='lines')
plot(x,y, col='red', type='l')
plot(x,y, col='red', type='scatter')
plot(x,y, col='red', type='lines')
abline(h=-1.5)
abline(x=-1.5)
abline(-1.5)
abline(v=-1.5)
abline(v=-1.5, col='blue')
X = rnorm(30,mean=-1.5, sd = 2.1)
X = rnorm(30,mean=-1.5, sd = 2.1)
X = rnorm(30,mean=-1.5, sd = 2.1)
X = rnorm(30,mean=-1.5, sd = 2.1)
X = rnorm(30,mean=-1.5, sd = 2.1)
rug(X, col='black')
mean(X)
mean(X)
mean(X)
rug(X, col='black')
mean(X)
mean(X)
sdX = sd(X)
sdX
muX = mean(X)
yAprendidoDosDados = dnorm(x, mean=muX, sd = sdX)
points(x, yAprendidoDosDados, col = 'green', type = 'lines')
3 * 10**(3)
XX = rnorm(3 * 10**(3), mean = -1.5, sd = 2.1)
muXX = mean(XX)
muXX
sdXX = sd(XX)
yAprendidoDosMuitodDados = dnorm(x, mean=muX, sd = sdX)
yAprendidoDosMuitodDados = dnorm(x, mean=muXX, sd = sdXX)
points(x, yAprendidoDosMuitodDados, col = 'purple', type = 'lines')
hits(XX, col='pink')
hist(XX, col='pink')
hist(XX, br = 3, col='pink')
hist(XX, br = 500, col='pink')
hist(XX, br = 1000, col='pink')
hist(XX, , col='pink')
hist(XX, br = 100, col='pink')
hist(XX, br = 1000, col='pink')
points(x, yAprendidoDosMuitodDados, col = 'purple', type = 'lines')
# com muitos dados
XX = rnorm(10**(4), mean = -1.5, sd = 2.1)
muXX = mean(XX)
sdXX = sd(XX)
yAprendidoDosMuitodDados = dnorm(x, mean=muXX, sd = sdXX)
points(x, yAprendidoDosMuitodDados, col = 'purple', type = 'lines')
# gerando dados (pra simulações) com distro gaussiana normal
x = seq(-10,10, len=100)
y =  dnorm(x, mean=-1.5, sd = 2.1)
plot(x,y, col='red', type='lines')
abline(v=-1.5, col='blue')
X = rnorm(30,mean=-1.5, sd = 2.1)
rug(X, col='black')
muX = mean(X)
sdX = sd(X)
yAprendidoDosDados = dnorm(x, mean=muX, sd = sdX)
points(x, yAprendidoDosDados, col = 'green', type = 'lines')
# com muitos dados
XX = rnorm(10**(4), mean = -1.5, sd = 2.1)
muXX = mean(XX)
sdXX = sd(XX)
yAprendidoDosMuitodDados = dnorm(x, mean=muXX, sd = sdXX)
points(x, yAprendidoDosMuitodDados, col = 'purple', type = 'lines')
hist(XX, br = 1000, col='pink')
hist(X, br = 1000, col='pink')
hist(x, br = 1000, col='pink')
hist(XX, br = 1000, col='pink')
hist(XX, br = 100, col='pink')
library(MASS)
Sigma = matrix(c(10,3,3,2),2,2)
Sigma
mu = c(2,2)
mvrnorm(n=10,rep(0,2),Sigma)
plot(mvrnorm(n=10,rep(0,2),Sigma))
plot(mvrnorm(n=10,rep(0,2),Sigma), type = 'lines')
plot(mvrnorm(n=10,rep(0,2),Sigma))
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=100,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=10000,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=100,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=100,rep(0,2),Sigma)
plot(X)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
X
muAprendido =  apply(A, 2, mean)
muAprendido =  apply(X, 2, mean)
muAprendido
sdAprendido =  apply(X, 2, sd)
sdAprendido
mu = c(10, 0.5, -200, 34.5, 0)
Sigma - matrix(c(2,0,0,0,0,    0,1,0,0,0,    0,0,150,0,0,    0,0,0,1,0,    0,0,0,0,10.1), nrow = 5, ncol = 5)
Sigma
Sigma = matrix(c(2,0,0,0,0,    0,1,0,0,0,    0,0,150,0,0,    0,0,0,1,0,    0,0,0,0,10.1), nrow = 5, ncol = 5)
Sigma
S = Sigma
S[1,4] = -1
S
S[4,1] = -1
S[3,5] = 2.3
S[5,3] = 2.3
S
A = mvnorm(1000, mu, S)
A = mvrnorm(1000, mu, S)
A
# reconstruindo
muChapeu = apply(A, 2, mean)
muChapeu
muChapeu
muChapeu
muChapeu
muChapeu
muChapeu
muChapeu
# reconstruindo
muChapeu = apply(A, 2, mean)
muChapeu
muChapeu - mu
muChapeu
muChapeu - mu
round(cov(A),1)
Sigma
S
round(cov(A),1)
round(cov(A),1) - S
round(cov(A),1)
S
A = mvrnorm(100000, mu, S)
# reconstruindo
muChapeu = apply(A, 2, mean)
round(cov(A),1)
S
round(cov(A),1) - S
A = mvrnorm(10**(5), mu, S)
A = mvrnorm(10**(8), mu, S)
A = mvrnorm(10**(7), mu, S)
# reconstruindo
muChapeu = apply(A, 2, mean)
round(cov(A),1)
S
round(cov(A),1) - S
# simulando gaussiana 5D
# a verdade:
mu = c(10, 0.5, -200, 34.5, 0)
Sigma = matrix(c(2,0,0,0,0,    0,1,0,0,0,    0,0,150,0,0,    0,0,0,1,0,    0,0,0,0,10.1), nrow = 5, ncol = 5)
S = Sigma
S[1,4] = -1
S[4,1] = -1
S[3,5] = 2.3
S[5,3] = 2.3
A = mvrnorm(10**(3), mu, S)
A = mvrnorm(10**(2), mu, S)
# reconstruindo
muChapeu = apply(A, 2, mean)
round(cov(A),1)
S
round(cov(A),1) - S
library(MASS)
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
Sigma = matrix(c(1,4,4,1),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
Sigma = matrix(c(10,4,4,1),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
Sigma = matrix(c(0.5,2,2,0.5),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
mu = c(8,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(8,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
plot(X)
plot(1, type = 'n', xlim = c(0,10), ylim = c(0,10))
points(X)
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(8,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X)
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'red')
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(8,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'vlue')
points(X, col = 'blue')
mu = c(2,8)
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(2,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'red')
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(2,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(2,2)
X = mvrnorm(n=1000,rep(0,5),Sigma)
rep(0,2)
rep(0,1)
rep(0,2)
X = mvrnorm(n=1000, rep(0,2),Sigma)
points(X, col = 'red')
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(2,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
mu = c(-10,1)
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(-10,1)
X = mvrnorm(n=1000, rep(0,2),Sigma)
points(X, col = 'red')
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(-10,-10)
X = mvrnorm(n=1000, rep(0,2),Sigma)
points(X, col = 'red')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
mu = c(-10,-10)
X = mvrnorm(n=1000, rep(0,2),Sigma)
points(X, col = 'red')
Sigma = matrix(c(5/2,2,2,5/2),2,2)
mu = c(10,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
points(X, col = 'blue')
points(X, col = 'blue')
points(X, col = 'blue')
points(X, col = 'blue')
points(X, col = 'blue')
points(X, col = 'blue')
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
mu = c(10,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(5/2,1,1,5/2),2,2)
mu = c(10,8)
X = mvrnorm(n=1000,rep(0,2),Sigma)
points(X, col = 'blue')
X = mvrnorm(n=1000,rep(0,2),Sigma, mean = mu)
X = mvrnorm(n=1000,rep(0,2), mu)
mu = c(10,8)
X = mvrnorm(n=1000,rep(0,2), mu)
X = mvrnorm(n=1000,rep(0,2), Sigma, mu)
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(5/2,1,1,5/2),2,2)
X = mvrnorm(n=1000,rep(0,2), Sigma, mu = c(10,8) )
points(X, col = 'blue')
X = mvrnorm(n=1000, rep(0,2),Sigma, mu = c(-10,-10))
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
X = mvrnorm(n=1000, rep(0,2),Sigma, mu = c(-10,-10))
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
X = mvrnorm(n=1000,rep(0,2), Sigma, mu = c(10,8) )
points(X, col = 'blue')
X = mvrnorm(n=1000,mu = c(10,8), Sigma)
Sigma = matrix(c(5/2,1,1,5/2),2,2)
X = mvrnorm(n=1000,mu = c(10,8), Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
X = mvrnorm(n=1000,Sigma, mu = c(-10,-10))
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
X = mvrnorm(n=1000,mu = c(10,8), Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
X = mvrnorm(n=1000,Sigma, mu = c(-8,7))
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
X = mvrnorm(n=1000,mu = c(9,-3), Sigma)
points(X, col = 'blue')
muAprendido =  apply(X, 2, mean)
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
X = mvrnorm(n=100,Sigma, mu = c(-8,7))
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
X = mvrnorm(n=100,mu = c(9,-3), Sigma)
points(X, col = 'blue')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(9,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
Sigma = matrix(c(10,3,3,2),2,2)
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-8,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-5,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-5,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(9,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-5,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(7,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-5,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(7,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
muAprendido =  apply(X, 2, mean)
sdAprendido =  apply(X, 2, sd)
muB
p1 = muA
p2 = muB
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
muB
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
muA
p1 = muA[2]
muA[2]
p1 = muA
p2 = muB
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
p1 = list(x = muA[1],y = muA[2])
p2 = list(x = muB[1],y = muB[2])
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'blue')
points(x = p2$x, y = p2$y, col = 'green')
points(x = pm$x, y = pm$y, col = 'red')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'red'  )
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-5,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(7,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
p1 = list(x = muA[1],y = muA[2])
p2 = list(x = muB[1],y = muB[2])
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'red')
points(x = p2$x, y = p2$y, col = 'blue')
points(x = pm$x, y = pm$y, col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'purple'  )
library(MASS)
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-2,7)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(3,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-2,4)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
plot(1, type = 'n', xlim = c(-10,10), ylim = c(-10,10))
Sigma = matrix(c(10,3,3,2),2,2)
muA = c(-2,1)
X = mvrnorm(n=100,Sigma, mu = muA)
points(X, col = 'red')
Sigma = matrix(c(5/2,1,1,5/2),2,2)
muB = c(3,-3)
X = mvrnorm(n=100,mu = muB, Sigma)
points(X, col = 'blue')
p1 = list(x = muA[1],y = muA[2])
p2 = list(x = muB[1],y = muB[2])
pm = list(x = (p1$x + p2$x)/2, y = (p1$y + p2$y)/2)
points(x = p1$x, y = p1$y, col = 'red')
points(x = p2$x, y = p2$y, col = 'blue')
points(x = pm$x, y = pm$y, col = 'purple')
abline(a = pm$y +  ( (p2$x - p1$x)/(p2$y - p1$y) )*pm$x , b = -(p2$x - p1$x)/(p2$y - p1$y), col = 'purple'  )
